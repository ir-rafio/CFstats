generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  handle                  String          @id
  name                    String
  country                 String?
  city                    String?
  organization            String?
  rating                  Int
  maxRating               Int
  registrationTimeSeconds Int
  photoLink               String
  updatedAt               DateTime        @updatedAt
  contests                Participation[]
  solutions               Solution[]
}

model Problem {
  contestId  Int
  index      String
  name       String
  difficulty Int?
  tags       String[]
  updatedAt  DateTime @updatedAt
  contest    Contest  @relation(fields: [contestId], references: [id])

  @@id([contestId, index])
}

model Contest {
  id               Int             @id
  name             String
  startTimeSeconds Int?
  type             ContestType
  phase            ContestPhase
  updatedAt        DateTime        @updatedAt
  ranks            ContestRank[]
  users            Participation[]
  problems         Problem[]
}

model ContestRank {
  id         String  @id @default(uuid())
  contestId  Int
  position   Int
  userHandle String
  contest    Contest @relation(fields: [contestId], references: [id])

  @@unique([contestId, userHandle])
}

model Solution {
  userHandle       String
  problemContestId Int
  problemIndex     String
  submissionTime   Int
  contestFlag      Boolean
  user             User    @relation(fields: [userHandle], references: [handle])

  @@id([userHandle, problemContestId, problemIndex])
}

model Participation {
  contestId  Int
  userHandle String
  contest    Contest @relation(fields: [contestId], references: [id])
  user       User    @relation(fields: [userHandle], references: [handle])

  @@id([userHandle, contestId])
}

enum ContestType {
  CF
  IOI
  ICPC
}

enum ContestPhase {
  BEFORE
  CODING
  PENDING_SYSTEM_TEST
  SYSTEM_TEST
  FINISHED
}
